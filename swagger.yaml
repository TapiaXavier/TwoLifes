openapi: 3.0.1
info:
  title: TwoLifes API
  description: API para un servicio de compra y venta de videojuegos de segunda mano.
  version: 1.0.0
servers:
  - url: 'https://twolifes.herokuapp.com/v1'
tags:
  - name: Usuarios
    description: Endpoint para manejar la informaci贸n relacionada a usuarios.
  - name: Videojuegos
    description: Endpoint para manejar la informaci贸n relacionada a videojuegos.
  - name: Anuncios
    description: Endpoint para manejar la informaci贸n relacionada a anuncios de venta.
  - name: Solicitudes
    description: Endpoint para manejar la informaci贸n relacionada a solicitudes.
paths:
  /users:
    post:
      tags:
        - Usuarios
      summary: Crear un nuevo usuario.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersBody'
        required: true
      responses:
        '200':
          description: (OK) El usuario fue creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersBody'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      tags:
        - Usuarios
      summary: Obtener todos los usuarios.
      responses:
        '200':
          description: (OK) Un array de usuarios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/users/{id}':
    get:
      tags:
        - Usuarios
      summary: Obtener los datos de un usuario.
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) Usuario encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - Usuarios
      summary: Modificar los datos de un usuario.
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) Datos actualizados exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Usuarios
      summary: Eliminar un usuario.
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /videogames:
    post:
      tags:
        - Videojuegos
      summary: Crear un nuevo videojuego.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideogamesBody'
        required: true
      responses:
        '200':
          description: (OK) El videojuego fue creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideogamesPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      tags:
        - Videojuegos
      summary: Obtener todos los videojuegos.
      responses:
        '200':
          description: (OK) Un array de videojuegos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideogamesPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/videogames/{id}':
    get:
      tags:
        - Videojuegos
      summary: Obtener los datos de un videojuego.
      parameters:
        - name: id
          in: path
          description: ID del videojuego.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) El videojuego fue encontrado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideogamesPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - Videojuegos
      summary: Modificar los datos de un videojuego.
      parameters:
        - name: id
          in: path
          description: ID del videojuego.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) El videojuego fue actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideogamesPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Videojuegos
      summary: Eliminar un videojuego.
      parameters:
        - name: id
          in: path
          description: ID del videojuego.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /ads:
    post:
      tags:
        - Anuncios
      summary: Crear un nuevo anuncio.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdsBody'
        required: true
      responses:
        '200':
          description: (OK) El anuncio fue creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      tags:
        - Anuncios
      summary: Obtener todos los anuncios de la base de datos.
      responses:
        '200':
          description: (OK) Array de anuncios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/ads/{id}':
    get:
      tags:
        - Anuncios
      summary: Obtener los datos de un anuncio.
      parameters:
        - name: id
          in: path
          description: ID del anuncio
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) Anuncio encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - Anuncios
      summary: Modificar los datos de un anuncio.
      parameters:
        - name: id
          in: path
          description: ID del anuncio
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) Datos actualizados exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Anuncios
      summary: Eliminar un anuncio.
      parameters:
        - name: id
          in: path
          description: ID del anuncio
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /purchaseRequests:
    post:
      tags:
        - Solicitudes
      summary: Crear una nueva solicitud.
      requesBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequestsBody'
        required: true
      responses:
        '200':
          description: (OK) La solicitud fue creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequestsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      tags:
        - Solicitudes
      summary: Obtener todas las solicitudes.
      responses:
        '200':
          description: (OK) Array de solicitudes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequestsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/purchaseRequests/{id}':
    get:
      tags:
        - Solicitudes
      summary: Obtener los datos de una solicitud.
      parameters:
        - name: id
          in: path
          description: ID de la solicitud
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) Solicitud encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequestsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - Solicitudes
      summary: Modificar los datos de una solicitud.
      parameters:
        - name: id
          in: path
          description: ID de la solicitud
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) Solicitud modificada exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequestsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Solicitudes
      summary: Eliminar una solicitud.
      parameters:
        - name: id
          in: path
          description: ID de la solicitud
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  responses:
    OK:
      description: (OK) Recurso eliminado exitosamente.
    NotFound:
      description: (NotFound) Recurso no encontrado.
    BadRequest:
      description: (BadRequest) La petici贸n no se ha hecho correctamente.
    ServerError:
      description: (ServerError) Error en el servidor.
  schemas:
    UsersBody:
      type: object
      properties:
        username:
          type: string
          description: Nombre de usuario.
        firstname:
          type: string
          description: Nombre del usuario.
        lastname:
          type: string
          description: Apellido del usuario.
        email:
          type: string
          description: Correo electr贸nico del usuario.
        password:
          type: string
          description: Contrase帽a del usuario.
        type:
          type: string
          enum:
            - buyer
            - seller
          description: Tipo de usuario.
    UsersPublicData:
      type: object
      properties:
        _id:
          type: string
          description: ID del usuario.
        username:
          type: string
          description: Username del usuario.
        firstname:
          type: string
          description: Nombre del usuario.
        lastname:
          type: string
          description: Apellido del usuario.
        email:
          type: string
          description: Correo electr贸nico del usuario.
    VideogamesBody:
      type: object
      properties:
        genre:
          type: string
          description: G茅nero del videojuego.
        languages:
          type: string
          description: Lenguajes disponibles del videojuego.
        name:
          type: string
          description: Nombre del videojuego.
        ageCategory:
          type: string
          description: Clasificasi贸n de edad del videojuego.
        releaseDate:
          type: string
          description: Fecha de lanzamiento del videojuego.
        synopsis:
          type: string
          description: Sinopsis del videojuego.
        platforms:
          type: string
          description: Plataformas en que est谩 disponible.
    VideogamesPublicData:
      type: object
      properties:
        _id:
          type: string
          description: ID del videojuego.
        genre:
          type: string
          description: G茅nero del videojuego.
        languages:
          type: string
          description: Lenguajes disponibles del videojuego.
        name:
          type: string
          description: Nombre del videojuego.
        ageCategory:
          type: string
          description: Clasificasi贸n de edad del videojuego.
        releaseDate:
          type: string
          description: Fecha de lanzamiento del videojuego.
        synopsis:
          type: string
          description: Sinopsis del videojuego.
        platforms:
          type: string
          description: Plataformas en que est谩 disponible.
    AdsBody:
      type: object
      properties:
        idAdvertiser:
          type: string
          description: ID del anunciante
        idVideogame:
          type: string
          description: ID del videojuego
        idPlatform:
          type: string
          description: ID de la plataforma
        price:
          type: number
          description: Precio del videojuego
        description:
          type: string
          description: Descripci贸n del videojuego
        status:
          type: string
          enum:
            - En venta
            - Vendido
          description: Estado del anuncio
    AdsPublicData:
      type: object
      properties:
        _id:
          type: string
          description: ID del anuncio
        idAdvertiser:
          type: string
          description: ID del anunciante
        idVideogame:
          type: string
          description: ID del videojuego
        idPlatform:
          type: string
          description: ID de la plataforma
        price:
          type: number
          description: Precio del videojuego
        description:
          type: string
          description: Descripci贸n del videojuego
        status:
          type: string
          enum:
            - En venta
            - Vendido
          description: Estado del anuncio
    PurchaseRequestsBody:
      type: object
      properties:
        idAd:
          type: string
          description: ID del anuncio
        idRequester:
          type: string
          description: ID del solicitante
        date:
          type: string
          description: null
        status:
          type: string
          enum:
            - Aceptada
            - Rechazada
            - Pendiente
          description: Estado de la solicitud
    PurchaseRequestsPublicData:
      type: object
      properties:
        _id:
          type: string
          description: ID de la solicitud
        idAd:
          type: string
          description: ID del anuncio
        idRequester:
          type: string
          description: ID del solicitante
        date:
          type: string
          description: null
        status:
          type: string
          enum:
            - Aceptada
            - Rechazada
            - Pendiente
          description: Estado de la solicitud
        dateReceived:
          type: string
          description: Fecha en que se recibi贸 el juego
