openapi: 3.0.1
info:
  title: TwoLifes API
  description: API para un servicio de compra y venta de videojuegos de segunda mano.
  version: 1.0.0
servers:
  - url: 'https://twolifes.herokuapp.com/v1'
tags:
  - name: Usuarios
    description: Endpoint para manejar la información relacionada a usuarios.
  - name: Videojuegos
    description: Endpoint para manejar la información relacionada a videojuegos.
  - name: Anuncios
    description: Endpoint para manejar la información relacionada a anuncios de venta.
  - name: Solicitudes
    description: Endpoint para manejar la información relacionada a solicitudes.
paths:
  /users:
    post:
      tags:
        - Usuarios
      summary: Crear un nuevo usuario.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersPostBody'
        required: true
      responses:
        '200':
          description: (OK) El usuario fue creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      tags:
        - Usuarios
      summary: Obtener todos los usuarios.
      responses:
        '200':
          description: (OK) Un array de usuarios.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/users/{id}':
    get:
      tags:
        - Usuarios
      summary: Obtener los datos de un usuario.
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) Usuario encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - Usuarios
      summary: Modificar los datos de un usuario.
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) Datos actualizados exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Usuarios
      summary: Eliminar un usuario.
      parameters:
        - name: id
          in: path
          description: ID del usuario
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /videogames:
    post:
      tags:
        - Videojuegos
      summary: Crear un nuevo videojuego.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideogamesPostBody'
      responses:
        '200':
          description: (OK) El videojuego fue creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideogamesPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      tags:
        - Videojuegos
      summary: Obtener todos los videojuegos.
      parameters:
        - name: releaseDate
          in: query
          description: Filtro por fecha de lanzamiento
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Búsqueda por nombre del videojuego
          required: false
          schema:
            type: string
        - name: platform
          in: query
          description: Filtro por ID de plataforma
          required: false
          schema:
            type: string
        - name: language
          in: query
          description: Filtro por idiomas
          required: false
          schema:
            type: array
            items:
              type: string
        - name: category
          in: query
          description: Filtro por categorías de edad
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - A - (Todo publico)
                - B - ( + 12 Años)
                - B15 - (+ 15 Años)
                - C - (Adultos +18)
                - D - (Extremo y contenido adulto)
        - name: genre
          in: query
          description: Filtro por géneros
          required: false
          schema:
            type: array
            items:
              type: string
        - name: synopsis
          in: query
          description: Búsqueda por sinopsis
          required: false
          schema:
            type: string
        - name: orderBy
          in: query
          description: ID del usuario
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Límite de resultados
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: (OK) Un array de videojuegos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideogamesPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/videogames/{id}':
    get:
      tags:
        - Videojuegos
      summary: Obtener los datos de un videojuego.
      parameters:
        - name: id
          in: path
          description: ID del videojuego.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) El videojuego fue encontrado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideogamesPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - Videojuegos
      summary: Modificar los datos de un videojuego.
      parameters:
        - name: id
          in: path
          description: ID del videojuego.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) El videojuego fue actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideogamesPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Videojuegos
      summary: Eliminar un videojuego.
      parameters:
        - name: id
          in: path
          description: ID del videojuego.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /ads:
    post:
      tags:
        - Anuncios
      summary: Crear un nuevo anuncio.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdsBody'
        required: true
      responses:
        '200':
          description: (OK) El anuncio fue creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      tags:
        - Anuncios
      summary: Obtener todos los anuncios de la base de datos.
      responses:
        '200':
          description: (OK) Array de anuncios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/ads/{id}':
    get:
      tags:
        - Anuncios
      summary: Obtener los datos de un anuncio.
      parameters:
        - name: id
          in: path
          description: ID del anuncio
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) Anuncio encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - Anuncios
      summary: Modificar los datos de un anuncio.
      parameters:
        - name: id
          in: path
          description: ID del anuncio
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) Datos actualizados exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Anuncios
      summary: Eliminar un anuncio.
      parameters:
        - name: id
          in: path
          description: ID del anuncio
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /purchaseRequests:
    post:
      tags:
        - Solicitudes
      summary: Crear una nueva solicitud.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequestsBody'
        required: true
      responses:
        '200':
          description: (OK) La solicitud fue creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequestsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      tags:
        - Solicitudes
      summary: Obtener todas las solicitudes.
      responses:
        '200':
          description: (OK) Array de solicitudes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequestsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/purchaseRequests/{id}':
    get:
      tags:
        - Solicitudes
      summary: Obtener los datos de una solicitud.
      parameters:
        - name: id
          in: path
          description: ID de la solicitud
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) Solicitud encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequestsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - Solicitudes
      summary: Modificar los datos de una solicitud.
      parameters:
        - name: id
          in: path
          description: ID de la solicitud
          required: true
          schema:
            type: string
      responses:
        '200':
          description: (OK) Solicitud modificada exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequestsPublicData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Solicitudes
      summary: Eliminar una solicitud.
      parameters:
        - name: id
          in: path
          description: ID de la solicitud
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  responses:
    OK:
      description: (OK) Recurso eliminado exitosamente.
    NotFound:
      description: (NotFound) Recurso no encontrado.
    BadRequest:
      description: (BadRequest) La petición no se ha hecho correctamente.
    ServerError:
      description: (ServerError) Error en el servidor.
  schemas:
    UsersPostBody:
      type: object
      required:
        - username
        - firstname
        - lastname
        - email
        - password
      properties:
        username:
          description: Nombre de usuario.
          type: string
          example: fulanit0
        firstname:
          description: Nombre del usuario.
          type: string
          example: Fulano
        lastname:
          description: Apellido del usuario.
          type: string
          example: de Tal
        email:
          description: Correo electrónico del usuario.
          type: string
          example: fulano@email.com
        password:
          description: Contraseña del usuario.
          type: string
          example: adohf9384tla
        profile_pic:
          description: URL de la imagen de perfil del usuario
          type: string
          example: 'https://res.cloudinary.com/fuvvg3x9s/image/upload/v1637027487/wbuwsj28te0kilztcylk.jpg'
    UsersPublicData:
      type: object
      properties:
        _id:
          description: ID del usuario.
          type: string
          example: 61520646ae73563db061bb36
        username:
          description: Nombre de usuario.
          type: string
          example: fulanit0
        firstname:
          description: Nombre del usuario.
          type: string
          example: Fulano
        lastname:
          description: Apellido del usuario.
          type: string
          example: de Tal
        email:
          description: Correo electrónico del usuario.
          type: string
          example: fulano@email.com
        profile_pic:
          description: URL de la imagen de perfil del usuario
          type: string
          example: 'https://res.cloudinary.com/fuvvg3x9s/image/upload/v1637027487/wbuwsj28te0kilztcylk.jpg'
    VideogamesPostBody:
      type: object
      required:
        - name
      properties:
        name:
          description: Nombre del videojuego.
          type: string
          example: Wii Sports
        genre:
          description: Género(s) del videojuego.
          type: array
          items:
            type: string
            enum:
              - Sala de juegos y plataformas
              - Deporte
              - Simulación
              - Juegos de rompecabezas y mentales
              - Disparos
              - Carreras
              - General
              - Educativo
              - Acción y aventura
              - Terror
          example:
            - Deporte
            - Simulación
        ageCategory:
          description: Clasificación de edad del videojuego.
          type: string
          enum:
            - A - (Todo publico)
            - B - ( + 12 Años)
            - B15 - (+ 15 Años)
            - C - (Adultos +18)
            - D - (Extremo y contenido adulto)
          example: A - (Todo publico)
        languages:
          description: Lenguajes disponibles del videojuego.
          type: array
          items:
            type: string
          example:
            - Español
            - Inglés
        releaseDate:
          description: Fecha de lanzamiento del videojuego.
          type: string
          example: 2008-10-12T00:00:00.000Z
        synopsis:
          type: string
          description: Sinopsis del videojuego.
          example: Disfruta de una variedad de deportes desde la comodidad de tu casa.
        platforms:
          description: Plataformas en que está disponible el videojuego.
          type: array
          items:
            type: string
            enum:
              - Xbox 360
              - Wii
              - Playstation 2
              - Nintendo DS
              - Playstation 3
              - Xbox One
              - Playstation 4
              - Xbox
              - Playstation
              - PSP
              - Nintendo 3DS
              - Wii U
              - Nintendo Switch
              - Dreamcast
              - PS Vita
              - Nintendo Gamecube
          example:
            - Wii
            - Wii U
    VideogamesPublicData:
      type: object
      properties:
        _id:
          type: string
          description: ID del videojuego.
          example: 615212fc1fda0032b8e7d457
        name:
          description: Nombre del videojuego.
          type: string
          example: Wii Sports
        genre:
          description: Género(s) del videojuego.
          type: array
          items:
            type: string
          example:
            - Deporte
            - Simulación
        ageCategory:
          description: Clasificación de edad del videojuego.
          type: string
          example: A - (Todo publico)
        languages:
          description: Lenguajes disponibles del videojuego.
          type: array
          items:
            type: string
          example:
            - Español
            - Inglés
        releaseDate:
          description: Fecha de lanzamiento del videojuego.
          type: string
          example: 2008-10-12T00:00:00.000Z
        synopsis:
          type: string
          description: Sinopsis del videojuego.
          example: Disfruta de una variedad de deportes desde la comodidad de tu casa.
        platforms:
          description: Plataformas en que está disponible el videojuego.
          type: array
          items:
            type: string
          example:
            - Wii
            - Wii U
    AdsBody:
      type: object
      properties:
        idAdvertiser:
          type: string
          description: ID del anunciante
        idVideogame:
          type: string
          description: ID del videojuego
        idPlatform:
          type: string
          description: ID de la plataforma
        price:
          type: number
          description: Precio del videojuego
        description:
          type: string
          description: Descripción del videojuego
        status:
          type: string
          enum:
            - En venta
            - Vendido
          description: Estado del anuncio
    AdsPublicData:
      type: object
      properties:
        _id:
          type: string
          description: ID del anuncio
        idAdvertiser:
          type: string
          description: ID del anunciante
        idVideogame:
          type: string
          description: ID del videojuego
        idPlatform:
          type: string
          description: ID de la plataforma
        price:
          type: number
          description: Precio del videojuego
        description:
          type: string
          description: Descripción del videojuego
        status:
          type: string
          enum:
            - En venta
            - Vendido
          description: Estado del anuncio
    PurchaseRequestsBody:
      type: object
      properties:
        idAd:
          type: string
          description: ID del anuncio
        idRequester:
          type: string
          description: ID del solicitante
        date:
          type: string
          description: Fecha de la solicitud
        status:
          type: string
          enum:
            - Aceptada
            - Rechazada
            - Pendiente
          description: Estado de la solicitud
    PurchaseRequestsPublicData:
      type: object
      properties:
        _id:
          type: string
          description: ID de la solicitud
        idAd:
          type: string
          description: ID del anuncio
        idRequester:
          type: string
          description: ID del solicitante
        date:
          type: string
          description: Fecha de la solicitud
        status:
          type: string
          enum:
            - Aceptada
            - Rechazada
            - Pendiente
          description: Estado de la solicitud
        dateReceived:
          type: string
          description: Fecha en que se recibió el juego
